{
    "sourceFile": "src/component/Content.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1711985358005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711985364608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n <template>\r\n     <div class=\"content\">\r\n-\r\n+      <h1>{{ props.title }}</h1>\r\n       <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n     </div>\r\n   </template>\r\n   \r\n@@ -12,9 +12,8 @@\n   import showdown from 'showdown';\r\n   import showdownKatex from 'showdown-katex';\r\n   \r\n   const props = defineProps({\r\n-      title: { type:String },\r\n       value: { type: String },\r\n       class: { type: String },\r\n   });\r\n   const data = reactive({})\r\n"
                },
                {
                    "date": 1711985370655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+<template>\r\n+    <div class=\"content\">\r\n+      <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n+    </div>\r\n+  </template>\r\n+  \r\n+  <script setup >\r\n+  import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n+  import { useStore } from 'vuex';\r\n+  import { useRoute, useRouter } from 'vue-router';\r\n+  import showdown from 'showdown';\r\n+  import showdownKatex from 'showdown-katex';\r\n+  \r\n+  const props = defineProps({\r\n+      value: { type: String },\r\n+      class: { type: String },\r\n+  });\r\n+  const data = reactive({})\r\n+  \r\n+  function transformMsg(msgInfo = '') {\r\n+      msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n+      let converter = new showdown.Converter({\r\n+          // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n+          tables: true, // 支持table语法\r\n+          simpleLineBreaks: true,\r\n+          strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n+          underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n+          extensions: [\r\n+          showdownKatex({\r\n+              // 使用方式见：https://obedm503.github.io/showdown-katex\r\n+              // 详细配置见：https://katex.org/docs/options.html\r\n+              throwOnError: false, // 公式有错时，是否抛出错误\r\n+              displayMode: false, // 如果为false，公式以inline方式渲染\r\n+              delimiters: [\r\n+              { left: '$$', right: '$$', display: true },\r\n+              { left: '$', right: '$', display: false },\r\n+              { left: '~', right: '~', display: false, asciimath: true },\r\n+              ],\r\n+          }),\r\n+          ],\r\n+      });\r\n+      return converter.makeHtml(msgInfo);\r\n+  }\r\n+  \r\n+  onBeforeMount(() => {\r\n+    //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n+  })\r\n+  onMounted(() => {\r\n+    //console.log('3.-组件挂载到页面之后执行-------onMounted')\r\n+  })\r\n+  watchEffect(()=>{\r\n+  })\r\n+  // 使用toRefs解构\r\n+  // let { } = { ...toRefs(data) } \r\n+  defineExpose({\r\n+    ...toRefs(data)\r\n+  })\r\n+  \r\n+  </script>\r\n+  <style scoped lang='less'>\r\n+  .content{\r\n+     width:100%;\r\n+     h1{\r\n+          text-align: center;\r\n+          line-height: 1.5rem;\r\n+     }\r\n+  }\r\n+  \r\n+  .katex-html {\r\n+      display: none;\r\n+    }\r\n+  .markdown-viewer {\r\n+      line-height: 0.32rem;\r\n+      font-size:0.2rem;\r\n+      td {\r\n+          border: 1px solid #dfe2e5;\r\n+          padding: 5px;\r\n+      }\r\n+      th {\r\n+          border: 1px solid #dfe2e5;\r\n+          padding: 5px;\r\n+          text-align: center;\r\n+      }\r\n+      tr:nth-child(2n-1) {\r\n+          background-color: #fafbfc;\r\n+      }\r\n+  }\r\n+  ::v-deep(.markdown-viewer pre){\r\n+      white-space: pre-wrap;\r\n+      word-wrap: break-word;\r\n+  }\r\n+  </style>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1711987500327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,9 +64,9 @@\n           text-align: center;\r\n           line-height: 1.5rem;\r\n      }\r\n      img{\r\n-        wid\r\n+        width\r\n      }\r\n   }\r\n   \r\n   .katex-html {\r\n"
                },
                {
                    "date": 1711987506055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+<template>\r\n+    <div class=\"content\">\r\n+      <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n+    </div>\r\n+  </template>\r\n+  \r\n+  <script setup >\r\n+  import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n+  import { useStore } from 'vuex';\r\n+  import { useRoute, useRouter } from 'vue-router';\r\n+  import showdown from 'showdown';\r\n+  import showdownKatex from 'showdown-katex';\r\n+  \r\n+  const props = defineProps({\r\n+      value: { type: String },\r\n+      class: { type: String },\r\n+  });\r\n+  const data = reactive({})\r\n+  \r\n+  function transformMsg(msgInfo = '') {\r\n+      msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n+      let converter = new showdown.Converter({\r\n+          // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n+          tables: true, // 支持table语法\r\n+          simpleLineBreaks: true,\r\n+          strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n+          underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n+          extensions: [\r\n+          showdownKatex({\r\n+              // 使用方式见：https://obedm503.github.io/showdown-katex\r\n+              // 详细配置见：https://katex.org/docs/options.html\r\n+              throwOnError: false, // 公式有错时，是否抛出错误\r\n+              displayMode: false, // 如果为false，公式以inline方式渲染\r\n+              delimiters: [\r\n+              { left: '$$', right: '$$', display: true },\r\n+              { left: '$', right: '$', display: false },\r\n+              { left: '~', right: '~', display: false, asciimath: true },\r\n+              ],\r\n+          }),\r\n+          ],\r\n+      });\r\n+      return converter.makeHtml(msgInfo);\r\n+  }\r\n+  \r\n+  onBeforeMount(() => {\r\n+    //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n+  })\r\n+  onMounted(() => {\r\n+    //console.log('3.-组件挂载到页面之后执行-------onMounted')\r\n+  })\r\n+  watchEffect(()=>{\r\n+  })\r\n+  // 使用toRefs解构\r\n+  // let { } = { ...toRefs(data) } \r\n+  defineExpose({\r\n+    ...toRefs(data)\r\n+  })\r\n+  \r\n+  </script>\r\n+  <style scoped lang='less'>\r\n+  .content{\r\n+     width:100%;\r\n+     h1{\r\n+          text-align: center;\r\n+          line-height: 1.5rem;\r\n+     }\r\n+     img{\r\n+        width:2rem;\r\n+     }\r\n+  }\r\n+  \r\n+  .katex-html {\r\n+      display: none;\r\n+    }\r\n+  .markdown-viewer {\r\n+      line-height: 0.32rem;\r\n+      font-size:0.2rem;\r\n+      td {\r\n+          border: 1px solid #dfe2e5;\r\n+          padding: 5px;\r\n+      }\r\n+      th {\r\n+          border: 1px solid #dfe2e5;\r\n+          padding: 5px;\r\n+          text-align: center;\r\n+      }\r\n+      tr:nth-child(2n-1) {\r\n+          background-color: #fafbfc;\r\n+      }\r\n+  }\r\n+  ::v-deep(.markdown-viewer pre){\r\n+      white-space: pre-wrap;\r\n+      word-wrap: break-word;\r\n+  }\r\n+  </style>\n\\ No newline at end of file\n"
                }
            ],
            "date": 1711985358005,
            "name": "Commit-0",
            "content": "<template>\r\n    <div class=\"content\">\r\n\r\n      <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup >\r\n  import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import { useRoute, useRouter } from 'vue-router';\r\n  import showdown from 'showdown';\r\n  import showdownKatex from 'showdown-katex';\r\n  \r\n  const props = defineProps({\r\n      title: { type:String },\r\n      value: { type: String },\r\n      class: { type: String },\r\n  });\r\n  const data = reactive({})\r\n  \r\n  function transformMsg(msgInfo = '') {\r\n      msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n      let converter = new showdown.Converter({\r\n          // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n          tables: true, // 支持table语法\r\n          simpleLineBreaks: true,\r\n          strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n          underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n          extensions: [\r\n          showdownKatex({\r\n              // 使用方式见：https://obedm503.github.io/showdown-katex\r\n              // 详细配置见：https://katex.org/docs/options.html\r\n              throwOnError: false, // 公式有错时，是否抛出错误\r\n              displayMode: false, // 如果为false，公式以inline方式渲染\r\n              delimiters: [\r\n              { left: '$$', right: '$$', display: true },\r\n              { left: '$', right: '$', display: false },\r\n              { left: '~', right: '~', display: false, asciimath: true },\r\n              ],\r\n          }),\r\n          ],\r\n      });\r\n      return converter.makeHtml(msgInfo);\r\n  }\r\n  \r\n  onBeforeMount(() => {\r\n    //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n  })\r\n  onMounted(() => {\r\n    //console.log('3.-组件挂载到页面之后执行-------onMounted')\r\n  })\r\n  watchEffect(()=>{\r\n  })\r\n  // 使用toRefs解构\r\n  // let { } = { ...toRefs(data) } \r\n  defineExpose({\r\n    ...toRefs(data)\r\n  })\r\n  \r\n  </script>\r\n  <style scoped lang='less'>\r\n  .content{\r\n     width:100%;\r\n     h1{\r\n          text-align: center;\r\n          line-height: 1.5rem;\r\n     }\r\n  }\r\n  \r\n  .katex-html {\r\n      display: none;\r\n    }\r\n  .markdown-viewer {\r\n      line-height: 0.32rem;\r\n      font-size:0.2rem;\r\n      td {\r\n          border: 1px solid #dfe2e5;\r\n          padding: 5px;\r\n      }\r\n      th {\r\n          border: 1px solid #dfe2e5;\r\n          padding: 5px;\r\n          text-align: center;\r\n      }\r\n      tr:nth-child(2n-1) {\r\n          background-color: #fafbfc;\r\n      }\r\n  }\r\n  ::v-deep(.markdown-viewer pre){\r\n      white-space: pre-wrap;\r\n      word-wrap: break-word;\r\n  }\r\n  </style>"
        }
    ]
}