{
    "sourceFile": "src/component/Article.vue",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1711548399227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1711548476989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,19 @@\n+<!--\r\n+ * @Author: Fleurxxx 984209872@qq.com\r\n+ * @Date: 2024-03-27 22:06:21\r\n+ * @LastEditors: Fleurxxx 984209872@qq.com\r\n+ * @LastEditTime: 2024-03-27 22:07:56\r\n+ * @FilePath: \\moving-platform\\src\\component\\Article.vue\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+-->\r\n <template>\r\n     <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n   </template>\r\n   <script lang=\"ts\" setup>\r\n+  import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n+import { useStore } from 'vuex';\r\n+import { useRoute, useRouter } from 'vue-router';\r\n     import showdown from 'showdown';\r\n     import showdownKatex from 'showdown-katex';\r\n     const props = defineProps({\r\n       value: { type: String },\r\n"
                },
                {
                    "date": 1711548484334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,61 +7,60 @@\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n -->\r\n <template>\r\n     <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n-  </template>\r\n-  <script lang=\"ts\" setup>\r\n-  import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n+</template>\r\n+<script lang=\"ts\" setup>\r\n+import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n import { useStore } from 'vuex';\r\n import { useRoute, useRouter } from 'vue-router';\r\n-    import showdown from 'showdown';\r\n-    import showdownKatex from 'showdown-katex';\r\n-    const props = defineProps({\r\n-      value: { type: String },\r\n-      class: { type: String },\r\n+import showdown from 'showdown';\r\n+import showdownKatex from 'showdown-katex';\r\n+const props = defineProps({\r\n+    value: { type: String },\r\n+    class: { type: String },\r\n+});\r\n+\r\n+function transformMsg(msgInfo = '') {\r\n+    msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n+    let converter = new showdown.Converter({\r\n+    // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n+    tables: true, // 支持table语法\r\n+    strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n+    underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n+    extensions: [\r\n+        showdownKatex({\r\n+        // 使用方式见：https://obedm503.github.io/showdown-katex\r\n+        // 详细配置见：https://katex.org/docs/options.html\r\n+        throwOnError: false, // 公式有错时，是否抛出错误\r\n+        displayMode: false, // 如果为false，公式以inline方式渲染\r\n+        delimiters: [\r\n+            { left: '$$', right: '$$', display: true },\r\n+            { left: '$', right: '$', display: false },\r\n+            { left: '~', right: '~', display: false, asciimath: true },\r\n+        ],\r\n+        }),\r\n+    ],\r\n     });\r\n-  \r\n-    function transformMsg(msgInfo = '') {\r\n-      msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n-      let converter = new showdown.Converter({\r\n-        // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n-        tables: true, // 支持table语法\r\n-        strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n-        underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n-        extensions: [\r\n-          showdownKatex({\r\n-            // 使用方式见：https://obedm503.github.io/showdown-katex\r\n-            // 详细配置见：https://katex.org/docs/options.html\r\n-            throwOnError: false, // 公式有错时，是否抛出错误\r\n-            displayMode: false, // 如果为false，公式以inline方式渲染\r\n-            delimiters: [\r\n-              { left: '$$', right: '$$', display: true },\r\n\\ No newline at end of file\n-              { left: '$', right: '$', display: false },\r\n-              { left: '~', right: '~', display: false, asciimath: true },\r\n-            ],\r\n-          }),\r\n-        ],\r\n-      });\r\n-      return converter.makeHtml(msgInfo);\r\n+    return converter.makeHtml(msgInfo);\r\n+}\r\n+</script>\r\n+<style>\r\n+.katex-html {\r\n+    display: none;\r\n+}\r\n+.markdown-viewer {\r\n+    width: 100%;\r\n+    td {\r\n+    border: 1px solid #dfe2e5;\r\n+    padding: 5px;\r\n     }\r\n-  </script>\r\n-  <style>\r\n-    .katex-html {\r\n-      display: none;\r\n+    th {\r\n+    border: 1px solid #dfe2e5;\r\n+    padding: 5px;\r\n+    text-align: center;\r\n     }\r\n-    .markdown-viewer {\r\n-      width: 100%;\r\n-      td {\r\n-        border: 1px solid #dfe2e5;\r\n-        padding: 5px;\r\n-      }\r\n-      th {\r\n-        border: 1px solid #dfe2e5;\r\n-        padding: 5px;\r\n-        text-align: center;\r\n-      }\r\n-      tr:nth-child(2n-1) {\r\n-        background-color: #fafbfc;\r\n-      }\r\n+    tr:nth-child(2n-1) {\r\n+    background-color: #fafbfc;\r\n     }\r\n-  </style>\r\n-  \n+}\r\n+</style>\r\n"
                },
                {
                    "date": 1711548526873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+<!--\r\n+ * @Author: Fleurxxx 984209872@qq.com\r\n+ * @Date: 2024-03-27 22:06:21\r\n+ * @LastEditors: Fleurxxx 984209872@qq.com\r\n+ * @LastEditTime: 2024-03-27 22:07:56\r\n+ * @FilePath: \\moving-platform\\src\\component\\Article.vue\r\n+ * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n+-->\r\n+<template>\r\n+    <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n+</template>\r\n+<script setup lang=\"ts\">\r\n+import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n+import { useStore } from 'vuex';\r\n+import { useRoute, useRouter } from 'vue-router';\r\n+import { VideoLinkUtils } from '@/utils/links.ts'; \r\n+import showdown from 'showdown';\r\n+import showdownKatex from 'showdown-katex';\r\n+import Video from '@/component/Video'\r\n+\r\n+const videoUtils = new VideoLinkUtils();\r\n+const store = useStore();\r\n+const route = useRoute();\r\n+const router = useRouter();\r\n+const data = reactive({\r\n+    name:'',\r\n+    intruction:'',\r\n+})\r\n+const url = ref('https://outin-f6c3661ae52711eeaca900163e32a995.oss-cn-shanghai.aliyuncs.com/sv/456b34da-18e7fe1ceab/456b34da-18e7fe1ceab.mp4?Expires=1711546151&OSSAccessKeyId=LTAIxSaOfEzCnBOj&Signature=xmHUKTZ%2FHH5qmCJE%2BJV1WdcY9BI%3D');\r\n+// Markdown 内容\r\n+const newsContent = ref<string>(`\r\n+# 新闻标题\r\n+\r\n+这是一条新闻的内容，包含文字和图片：\r\n+\r\n+![图片描述](https://example.com/image.jpg)\r\n+\r\n+Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec nec velit eget dolor tristique consequat. Integer mattis nisi quis nibh interdum, et consequat nisi lobortis.\r\n+`);\r\n+function transformMsg(msgInfo = '') {\r\n+    msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n+    let converter = new showdown.Converter({\r\n+        // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n+        tables: true, // 支持table语法\r\n+        strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n+        underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n+        extensions: [\r\n+        showdownKatex({\r\n+            // 使用方式见：https://obedm503.github.io/showdown-katex\r\n+            // 详细配置见：https://katex.org/docs/options.html\r\n+            throwOnError: false, // 公式有错时，是否抛出错误\r\n+            displayMode: false, // 如果为false，公式以inline方式渲染\r\n+            delimiters: [\r\n+            { left: '$$', right: '$$', display: true },\r\n+            { left: '$', right: '$', display: false },\r\n+            { left: '~', right: '~', display: false, asciimath: true },\r\n+            ],\r\n+        }),\r\n+        ],\r\n+    });\r\n+    return converter.makeHtml(msgInfo);\r\n+pnp}\r\n+\r\n+onBeforeMount(() => {\r\n+  //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n+})\r\n+onMounted(() => {\r\n+    videoUtils.addVideoLink(\"Video 1\", \"https://example.com/video1.mp4\");\r\n+    videoUtils.addVideoLink(\"Video 2\", \"https://example.com/video2.mp4\");\r\n+    videoUtils.printAllVideoLinks();\r\n+    console.log(\"Video 1 URL:\", videoUtils.getVideoLink(\"Video 1\"));\r\n+    data.name = '安恒信息';\r\n+    data.intruction = '杭州安恒信息技术股份有限公司（简称：安恒信息）成立于2007年，于2019年登陆科创板，是网络安全行业发展速度最快的上市公司之一。作为行业领导者，安恒信息秉承“构建安全可信的数字世界”的企业使命，以数字经济的安全基石为企业定位，形成了云安全、大数据安全、物联网安全、智慧城市安全、工业控制系统安全及工业互联网安全五大市场战略，凭借强大的研发实力和持续的产品创新，完成覆盖网络信息安全全生命周期的产品、服务及解决方案体系，作为国家级核心安保单位，参与了近乎全部国家重大活动网络安保，实现零失误。2020年11月23日，安恒信息正式成为2022年杭州第19届亚运会网络安全类官方合作伙伴，这也是国际大型综合性赛事网络信息安全类最高层级合作。';\r\n+})\r\n+watchEffect(()=>{\r\n+})\r\n+// 使用toRefs解构\r\n+// let { } = { ...toRefs(data) } \r\n+defineExpose({\r\n+  ...toRefs(data)\r\n+})\r\n+\r\n+</script>\r\n+<style>\r\n+.katex-html {\r\n+    display: none;\r\n+}\r\n+.markdown-viewer {\r\n+    width: 100%;\r\n+    td {\r\n+    border: 1px solid #dfe2e5;\r\n+    padding: 5px;\r\n+    }\r\n+    th {\r\n+    border: 1px solid #dfe2e5;\r\n+    padding: 5px;\r\n+    text-align: center;\r\n+    }\r\n+    tr:nth-child(2n-1) {\r\n+    background-color: #fafbfc;\r\n+    }\r\n+}\r\n+</style>\r\n"
                },
                {
                    "date": 1711548545353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n <!--\r\n  * @Author: Fleurxxx 984209872@qq.com\r\n  * @Date: 2024-03-27 22:06:21\r\n  * @LastEditors: Fleurxxx 984209872@qq.com\r\n- * @LastEditTime: 2024-03-27 22:07:56\r\n+ * @LastEditTime: 2024-03-27 22:09:05\r\n  * @FilePath: \\moving-platform\\src\\component\\Article.vue\r\n  * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n -->\r\n <template>\r\n@@ -58,9 +58,9 @@\n         }),\r\n         ],\r\n     });\r\n     return converter.makeHtml(msgInfo);\r\n-pnp}\r\n+}\r\n \r\n onBeforeMount(() => {\r\n   //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n })\r\n@@ -100,70 +100,4 @@\n     background-color: #fafbfc;\r\n     }\r\n }\r\n </style>\r\n-<!--\r\n- * @Author: Fleurxxx 984209872@qq.com\r\n- * @Date: 2024-03-27 22:06:21\r\n- * @LastEditors: Fleurxxx 984209872@qq.com\r\n- * @LastEditTime: 2024-03-27 22:07:56\r\n- * @FilePath: \\moving-platform\\src\\component\\Article.vue\r\n- * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n--->\r\n-<template>\r\n-    <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n-</template>\r\n-<script lang=\"ts\" setup>\r\n-import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n-import { useStore } from 'vuex';\r\n-import { useRoute, useRouter } from 'vue-router';\r\n-import showdown from 'showdown';\r\n-import showdownKatex from 'showdown-katex';\r\n-const props = defineProps({\r\n-    value: { type: String },\r\n-    class: { type: String },\r\n-});\r\n-\r\n-function transformMsg(msgInfo = '') {\r\n-    msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n-    let converter = new showdown.Converter({\r\n-    // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n-    tables: true, // 支持table语法\r\n-    strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n-    underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n-    extensions: [\r\n-        showdownKatex({\r\n-        // 使用方式见：https://obedm503.github.io/showdown-katex\r\n-        // 详细配置见：https://katex.org/docs/options.html\r\n-        throwOnError: false, // 公式有错时，是否抛出错误\r\n-        displayMode: false, // 如果为false，公式以inline方式渲染\r\n-        delimiters: [\r\n-            { left: '$$', right: '$$', display: true },\r\n-            { left: '$', right: '$', display: false },\r\n-            { left: '~', right: '~', display: false, asciimath: true },\r\n-        ],\r\n-        }),\r\n-    ],\r\n-    });\r\n-    return converter.makeHtml(msgInfo);\r\n-}\r\n-</script>\r\n-<style>\r\n-.katex-html {\r\n-    display: none;\r\n-}\r\n-.markdown-viewer {\r\n-    width: 100%;\r\n-    td {\r\n-    border: 1px solid #dfe2e5;\r\n-    padding: 5px;\r\n-    }\r\n-    th {\r\n-    border: 1px solid #dfe2e5;\r\n-    padding: 5px;\r\n-    text-align: center;\r\n-    }\r\n-    tr:nth-child(2n-1) {\r\n-    background-color: #fafbfc;\r\n-    }\r\n-}\r\n-</style>\r\n"
                },
                {
                    "date": 1711548560226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+<template>\r\n+    <div class=\"top\">\r\n+      <el-card class=\"card\">\r\n+          <div class=\"card-box\">\r\n+              <Video class=\"card-video\" :width=\"9\" :height=\"4\" :url=\"url\"/>\r\n+              <div class=\"card-content\">\r\n+                  <h1>{{ data.name }}</h1>\r\n+                  <img src=\"@/assets/image/common/展商底.png\" />\r\n+                  <p>{{data.intruction}}</p>\r\n+              </div>\r\n+          </div>\r\n+      </el-card>\r\n+    </div>\r\n+    <div class=\"container\">\r\n+      <div class=\"company\">\r\n+          <h1>{{ data.name }}</h1>\r\n+          <img src=\"@/assets/image/common/展商底.png\" />\r\n+      </div>\r\n+      <div>\r\n+          <h1>{{ data.title }}</h1>\r\n+          <div v-html=\"transformMsg(newsContent)\" class=\"markdown-viewer\"></div>\r\n+      </div>\r\n+    </div>\r\n+  </template>\r\n+  \r\n+  <script setup lang=\"ts\">\r\n+  import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n+  import { useStore } from 'vuex';\r\n+  import { useRoute, useRouter } from 'vue-router';\r\n+  import { VideoLinkUtils } from '@/utils/links.ts'; \r\n+  import showdown from 'showdown';\r\n+  import showdownKatex from 'showdown-katex';\r\n+  import Video from '@/component/Video'\r\n+  \r\n+  const videoUtils = new VideoLinkUtils();\r\n+  const store = useStore();\r\n+  const route = useRoute();\r\n+  const router = useRouter();\r\n+  const data = reactive({\r\n+      name:'',\r\n+      intruction:'',\r\n+  })\r\n+  const url = ref('https://outin-f6c3661ae52711eeaca900163e32a995.oss-cn-shanghai.aliyuncs.com/sv/456b34da-18e7fe1ceab/456b34da-18e7fe1ceab.mp4?Expires=1711546151&OSSAccessKeyId=LTAIxSaOfEzCnBOj&Signature=xmHUKTZ%2FHH5qmCJE%2BJV1WdcY9BI%3D');\r\n+  // Markdown 内容\r\n+  const newsContent = ref<string>(`\r\n+  # 新闻标题\r\n+  \r\n+  这是一条新闻的内容，包含文字和图片：\r\n+  \r\n+  ![图片描述](https://example.com/image.jpg)\r\n+  \r\n+  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec nec velit eget dolor tristique consequat. Integer mattis nisi quis nibh interdum, et consequat nisi lobortis.\r\n+  `);\r\n+  function transformMsg(msgInfo = '') {\r\n+      msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n+      let converter = new showdown.Converter({\r\n+          // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n+          tables: true, // 支持table语法\r\n+          strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n+          underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n+          extensions: [\r\n+          showdownKatex({\r\n+              // 使用方式见：https://obedm503.github.io/showdown-katex\r\n+              // 详细配置见：https://katex.org/docs/options.html\r\n+              throwOnError: false, // 公式有错时，是否抛出错误\r\n+              displayMode: false, // 如果为false，公式以inline方式渲染\r\n+              delimiters: [\r\n+              { left: '$$', right: '$$', display: true },\r\n+              { left: '$', right: '$', display: false },\r\n+              { left: '~', right: '~', display: false, asciimath: true },\r\n+              ],\r\n+          }),\r\n+          ],\r\n+      });\r\n+      return converter.makeHtml(msgInfo);\r\n+  }\r\n+  \r\n+  onBeforeMount(() => {\r\n+    //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n+  })\r\n+  onMounted(() => {\r\n+      videoUtils.addVideoLink(\"Video 1\", \"https://example.com/video1.mp4\");\r\n+      videoUtils.addVideoLink(\"Video 2\", \"https://example.com/video2.mp4\");\r\n+      videoUtils.printAllVideoLinks();\r\n+      console.log(\"Video 1 URL:\", videoUtils.getVideoLink(\"Video 1\"));\r\n+      data.name = '安恒信息';\r\n+      data.intruction = '杭州安恒信息技术股份有限公司（简称：安恒信息）成立于2007年，于2019年登陆科创板，是网络安全行业发展速度最快的上市公司之一。作为行业领导者，安恒信息秉承“构建安全可信的数字世界”的企业使命，以数字经济的安全基石为企业定位，形成了云安全、大数据安全、物联网安全、智慧城市安全、工业控制系统安全及工业互联网安全五大市场战略，凭借强大的研发实力和持续的产品创新，完成覆盖网络信息安全全生命周期的产品、服务及解决方案体系，作为国家级核心安保单位，参与了近乎全部国家重大活动网络安保，实现零失误。2020年11月23日，安恒信息正式成为2022年杭州第19届亚运会网络安全类官方合作伙伴，这也是国际大型综合性赛事网络信息安全类最高层级合作。';\r\n+  })\r\n+  watchEffect(()=>{\r\n+  })\r\n+  // 使用toRefs解构\r\n+  // let { } = { ...toRefs(data) } \r\n+  defineExpose({\r\n+    ...toRefs(data)\r\n+  })\r\n+  \r\n+  </script>\r\n+  <style scoped lang='less'>\r\n+  .top{\r\n+      width:100%;\r\n+      height: 70vh;\r\n+      background-image: url('@/assets/image/common/1456345283546.gif');\r\n+      background-repeat: no-repeat;\r\n+      background-position: center center;\r\n+      background-size: cover;\r\n+      display: flex;\r\n+      justify-content: center;\r\n+      align-items: center;\r\n+      position: relative; /* 相对定位，以便设置子元素的 z-index */\r\n+  }\r\n+  .card{\r\n+      position: relative; \r\n+      max-width: 14rem;\r\n+      z-index: 2; \r\n+      border: 1px solid #00ae8d;\r\n+      border-radius: 15px;\r\n+      padding: 15px 30px 30px 30px;\r\n+      background-color: #18133c;\r\n+      box-shadow: inset 0 0 4px 1px #00ae8d;\r\n+  }\r\n+  .card-box{\r\n+      display: flex;\r\n+      flex-direction: row;\r\n+      justify-content: space-between;\r\n+  }\r\n+  .card-video{\r\n+      \r\n+  }\r\n+  .card-content{\r\n+      h1,p{\r\n+          color:#fff;\r\n+      }\r\n+      h1{\r\n+          position: absolute;\r\n+          margin-left: 0.7rem;\r\n+          margin-top:0.2rem;\r\n+      }\r\n+      p{\r\n+          padding-left: 0.6rem;\r\n+          line-height: 0.32rem;\r\n+          font-size:0.2rem;\r\n+          text-indent:2em; \r\n+      }\r\n+      img{\r\n+          width:3rem;\r\n+          // margin-left: -0.4rem;\r\n+      }\r\n+  }\r\n+  .container{\r\n+      margin: 1rem 3rem;\r\n+  }\r\n+  .news-detail {\r\n+    max-width: 800px;\r\n+    margin: 0 auto;\r\n+  }\r\n+  </style>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1711548568838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,156 +0,0 @@\n-<template>\r\n-    <div class=\"top\">\r\n-      <el-card class=\"card\">\r\n-          <div class=\"card-box\">\r\n-              <Video class=\"card-video\" :width=\"9\" :height=\"4\" :url=\"url\"/>\r\n-              <div class=\"card-content\">\r\n-                  <h1>{{ data.name }}</h1>\r\n-                  <img src=\"@/assets/image/common/展商底.png\" />\r\n-                  <p>{{data.intruction}}</p>\r\n-              </div>\r\n-          </div>\r\n-      </el-card>\r\n-    </div>\r\n-    <div class=\"container\">\r\n-      <div class=\"company\">\r\n-          <h1>{{ data.name }}</h1>\r\n-          <img src=\"@/assets/image/common/展商底.png\" />\r\n-      </div>\r\n-      <div>\r\n-          <h1>{{ data.title }}</h1>\r\n-          <div v-html=\"transformMsg(newsContent)\" class=\"markdown-viewer\"></div>\r\n-      </div>\r\n-    </div>\r\n-  </template>\r\n-  \r\n-  <script setup lang=\"ts\">\r\n-  import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n-  import { useStore } from 'vuex';\r\n-  import { useRoute, useRouter } from 'vue-router';\r\n-  import { VideoLinkUtils } from '@/utils/links.ts'; \r\n-  import showdown from 'showdown';\r\n-  import showdownKatex from 'showdown-katex';\r\n-  import Video from '@/component/Video'\r\n-  \r\n-  const videoUtils = new VideoLinkUtils();\r\n-  const store = useStore();\r\n-  const route = useRoute();\r\n-  const router = useRouter();\r\n-  const data = reactive({\r\n-      name:'',\r\n-      intruction:'',\r\n-  })\r\n-  const url = ref('https://outin-f6c3661ae52711eeaca900163e32a995.oss-cn-shanghai.aliyuncs.com/sv/456b34da-18e7fe1ceab/456b34da-18e7fe1ceab.mp4?Expires=1711546151&OSSAccessKeyId=LTAIxSaOfEzCnBOj&Signature=xmHUKTZ%2FHH5qmCJE%2BJV1WdcY9BI%3D');\r\n-  // Markdown 内容\r\n-  const newsContent = ref<string>(`\r\n-  # 新闻标题\r\n-  \r\n-  这是一条新闻的内容，包含文字和图片：\r\n-  \r\n-  ![图片描述](https://example.com/image.jpg)\r\n-  \r\n-  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec nec velit eget dolor tristique consequat. Integer mattis nisi quis nibh interdum, et consequat nisi lobortis.\r\n-  `);\r\n-  function transformMsg(msgInfo = '') {\r\n-      msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n-      let converter = new showdown.Converter({\r\n-          // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n-          tables: true, // 支持table语法\r\n-          strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n-          underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n-          extensions: [\r\n-          showdownKatex({\r\n-              // 使用方式见：https://obedm503.github.io/showdown-katex\r\n-              // 详细配置见：https://katex.org/docs/options.html\r\n-              throwOnError: false, // 公式有错时，是否抛出错误\r\n-              displayMode: false, // 如果为false，公式以inline方式渲染\r\n-              delimiters: [\r\n-              { left: '$$', right: '$$', display: true },\r\n-              { left: '$', right: '$', display: false },\r\n-              { left: '~', right: '~', display: false, asciimath: true },\r\n-              ],\r\n-          }),\r\n-          ],\r\n-      });\r\n-      return converter.makeHtml(msgInfo);\r\n-  }\r\n-  \r\n-  onBeforeMount(() => {\r\n-    //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n-  })\r\n-  onMounted(() => {\r\n-      videoUtils.addVideoLink(\"Video 1\", \"https://example.com/video1.mp4\");\r\n-      videoUtils.addVideoLink(\"Video 2\", \"https://example.com/video2.mp4\");\r\n-      videoUtils.printAllVideoLinks();\r\n-      console.log(\"Video 1 URL:\", videoUtils.getVideoLink(\"Video 1\"));\r\n-      data.name = '安恒信息';\r\n-      data.intruction = '杭州安恒信息技术股份有限公司（简称：安恒信息）成立于2007年，于2019年登陆科创板，是网络安全行业发展速度最快的上市公司之一。作为行业领导者，安恒信息秉承“构建安全可信的数字世界”的企业使命，以数字经济的安全基石为企业定位，形成了云安全、大数据安全、物联网安全、智慧城市安全、工业控制系统安全及工业互联网安全五大市场战略，凭借强大的研发实力和持续的产品创新，完成覆盖网络信息安全全生命周期的产品、服务及解决方案体系，作为国家级核心安保单位，参与了近乎全部国家重大活动网络安保，实现零失误。2020年11月23日，安恒信息正式成为2022年杭州第19届亚运会网络安全类官方合作伙伴，这也是国际大型综合性赛事网络信息安全类最高层级合作。';\r\n-  })\r\n-  watchEffect(()=>{\r\n-  })\r\n-  // 使用toRefs解构\r\n-  // let { } = { ...toRefs(data) } \r\n-  defineExpose({\r\n-    ...toRefs(data)\r\n-  })\r\n-  \r\n-  </script>\r\n-  <style scoped lang='less'>\r\n-  .top{\r\n-      width:100%;\r\n-      height: 70vh;\r\n-      background-image: url('@/assets/image/common/1456345283546.gif');\r\n-      background-repeat: no-repeat;\r\n-      background-position: center center;\r\n-      background-size: cover;\r\n-      display: flex;\r\n-      justify-content: center;\r\n-      align-items: center;\r\n-      position: relative; /* 相对定位，以便设置子元素的 z-index */\r\n-  }\r\n-  .card{\r\n-      position: relative; \r\n-      max-width: 14rem;\r\n-      z-index: 2; \r\n-      border: 1px solid #00ae8d;\r\n-      border-radius: 15px;\r\n-      padding: 15px 30px 30px 30px;\r\n-      background-color: #18133c;\r\n-      box-shadow: inset 0 0 4px 1px #00ae8d;\r\n-  }\r\n-  .card-box{\r\n-      display: flex;\r\n-      flex-direction: row;\r\n-      justify-content: space-between;\r\n-  }\r\n-  .card-video{\r\n-      \r\n-  }\r\n-  .card-content{\r\n-      h1,p{\r\n-          color:#fff;\r\n-      }\r\n-      h1{\r\n-          position: absolute;\r\n-          margin-left: 0.7rem;\r\n-          margin-top:0.2rem;\r\n-      }\r\n-      p{\r\n-          padding-left: 0.6rem;\r\n-          line-height: 0.32rem;\r\n-          font-size:0.2rem;\r\n-          text-indent:2em; \r\n-      }\r\n-      img{\r\n-          width:3rem;\r\n-          // margin-left: -0.4rem;\r\n-      }\r\n-  }\r\n-  .container{\r\n-      margin: 1rem 3rem;\r\n-  }\r\n-  .news-detail {\r\n-    max-width: 800px;\r\n-    margin: 0 auto;\r\n-  }\r\n-  </style>\n\\ No newline at end of file\n"
                },
                {
                    "date": 1711548590464,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,33 @@\n /**\r\n * 数据部分\r\n */\r\n const data = reactive({})\r\n+\r\n+function transformMsg(msgInfo = '') {\r\n+    msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n+    let converter = new showdown.Converter({\r\n+        // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n+        tables: true, // 支持table语法\r\n+        strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n+        underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n+        extensions: [\r\n+        showdownKatex({\r\n+            // 使用方式见：https://obedm503.github.io/showdown-katex\r\n+            // 详细配置见：https://katex.org/docs/options.html\r\n+            throwOnError: false, // 公式有错时，是否抛出错误\r\n+            displayMode: false, // 如果为false，公式以inline方式渲染\r\n+            delimiters: [\r\n+            { left: '$$', right: '$$', display: true },\r\n+            { left: '$', right: '$', display: false },\r\n+            { left: '~', right: '~', display: false, asciimath: true },\r\n+            ],\r\n+        }),\r\n+        ],\r\n+    });\r\n+    return converter.makeHtml(msgInfo);\r\n+}\r\n+\r\n onBeforeMount(() => {\r\n   //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n })\r\n onMounted(() => {\r\n"
                },
                {
                    "date": 1711548642965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+<template>\r\n+  <div >\r\n+    <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n+  </div>\r\n+</template>\r\n+\r\n+<script setup>\r\n+import { ref, reactive, toRefs, onBeforeMount, onMounted, watchEffect, computed } from 'vue';\r\n+import { useStore } from 'vuex';\r\n+import { useRoute, useRouter } from 'vue-router';\r\n+import showdown from 'showdown';\r\n+import showdownKatex from 'showdown-katex';\r\n+const props = defineProps({\r\n+value: { type: String },\r\n+class: { type: String },\r\n+});\r\n+const data = reactive({})\r\n+\r\n+function transformMsg(msgInfo = '') {\r\n+    msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n+    let converter = new showdown.Converter({\r\n+        // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n+        tables: true, // 支持table语法\r\n+        strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n+        underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n+        extensions: [\r\n+        showdownKatex({\r\n+            // 使用方式见：https://obedm503.github.io/showdown-katex\r\n+            // 详细配置见：https://katex.org/docs/options.html\r\n+            throwOnError: false, // 公式有错时，是否抛出错误\r\n+            displayMode: false, // 如果为false，公式以inline方式渲染\r\n+            delimiters: [\r\n+            { left: '$$', right: '$$', display: true },\r\n+            { left: '$', right: '$', display: false },\r\n+            { left: '~', right: '~', display: false, asciimath: true },\r\n+            ],\r\n+        }),\r\n+        ],\r\n+    });\r\n+    return converter.makeHtml(msgInfo);\r\n+}\r\n+\r\n+onBeforeMount(() => {\r\n+  //console.log('2.组件挂载页面之前执行----onBeforeMount')\r\n+})\r\n+onMounted(() => {\r\n+  //console.log('3.-组件挂载到页面之后执行-------onMounted')\r\n+})\r\n+watchEffect(()=>{\r\n+})\r\n+// 使用toRefs解构\r\n+// let { } = { ...toRefs(data) } \r\n+defineExpose({\r\n+  ...toRefs(data)\r\n+})\r\n+\r\n+</script>\r\n+<style scoped lang='less'>\r\n+</style>\n\\ No newline at end of file\n"
                }
            ],
            "date": 1711548399227,
            "name": "Commit-0",
            "content": "<template>\r\n    <div v-html=\"transformMsg(props.value)\" class=\"markdown-viewer\"></div>\r\n  </template>\r\n  <script lang=\"ts\" setup>\r\n    import showdown from 'showdown';\r\n    import showdownKatex from 'showdown-katex';\r\n    const props = defineProps({\r\n      value: { type: String },\r\n      class: { type: String },\r\n    });\r\n  \r\n    function transformMsg(msgInfo = '') {\r\n      msgInfo = msgInfo.replaceAll('<br  />', '\\n'); // 一些处理\r\n      let converter = new showdown.Converter({\r\n        // 详细配置见：https://github.com/showdownjs/showdown#valid-options\r\n        tables: true, // 支持table语法\r\n        strikethrough: true, // 将~~strikethrough~~ 识别为 <del>strikethrough</del>\r\n        underline: true, // __test__中的下划线不识别为<em> 和 <strong>\r\n        extensions: [\r\n          showdownKatex({\r\n            // 使用方式见：https://obedm503.github.io/showdown-katex\r\n            // 详细配置见：https://katex.org/docs/options.html\r\n            throwOnError: false, // 公式有错时，是否抛出错误\r\n            displayMode: false, // 如果为false，公式以inline方式渲染\r\n            delimiters: [\r\n              { left: '$$', right: '$$', display: true },\r\n              { left: '$', right: '$', display: false },\r\n              { left: '~', right: '~', display: false, asciimath: true },\r\n            ],\r\n          }),\r\n        ],\r\n      });\r\n      return converter.makeHtml(msgInfo);\r\n    }\r\n  </script>\r\n  <style>\r\n    .katex-html {\r\n      display: none;\r\n    }\r\n    .markdown-viewer {\r\n      width: 100%;\r\n      td {\r\n        border: 1px solid #dfe2e5;\r\n        padding: 5px;\r\n      }\r\n      th {\r\n        border: 1px solid #dfe2e5;\r\n        padding: 5px;\r\n        text-align: center;\r\n      }\r\n      tr:nth-child(2n-1) {\r\n        background-color: #fafbfc;\r\n      }\r\n    }\r\n  </style>\r\n  "
        }
    ]
}